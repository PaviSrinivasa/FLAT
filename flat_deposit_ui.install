<?php
/**
 * @file
 * Deposit UI installation
 */

/**
 * Implements hook_install().
 */
function flat_deposit_ui_install(){
    $t = get_t();


    //Content type definition
    //type is the id of the content type, name the human-readable name and description detailed info about content type; title_label is the header above the created content type
    $content_type = array(
        'type' => 'custom_content_type_1',
        'name' => $t('Content type example 1'),
        'description' => $t('Use this content type as an template for new custom content types'),
        'title_label' => $t('Label 1'),
        'base' => 'node_content',
        'custom' => TRUE,
    );

    // Set remaining definiton with defaults.
    $node_type = node_type_set_defaults($content_type);

    // Save the content type.
    node_type_save($node_type);

    // Add additional field to body
    node_add_body_field($node_type, $t('Description'));

    // Create fields
    $fields =  array();

    $fields['flat_field_int_1'] = array(
        'field_name' => 'flat_field_int_1',
        'type' => 'number_integer',
        //optional
        'cardinality' => 1,
        'settings' => array(
            'max_length' => '5',
        )
    );

    $fields['flat_field_text_1'] = array(
        'field_name' => 'flat_field_text_1',
        'type' => 'text',
        'settings' => array(
            'max_length' => '60',
        )
    );


    foreach ($fields as $field) {
        field_create_field($field);
    }


    //create Field instances
    $instances  = array ();

    $instances['flat_field_int_1'] = array(
        'field_name' => 'flat_field_int_1',
        'label' => $t('Integer number 1'),
        'description' => $t('Describe contents'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'required' => TRUE,
        'settings' => array(
            'text_processing' => 0,
        )
    );

    $instances['flat_field_text_1'] = array(
        'field_name' => 'flat_field_text_1',
        'label' => $t('Text field 1'),
        'description' => $t('Describes text contents'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'settings' => array(
            'text_processing' => 1,
        ),
        'display' => array(
            'default' => array(
                'label' => 'inline',
            ),
        )
    );


    foreach ($instances as $instance) {
        $instance ['entity_type'] = 'node';
        $instance ['bundle'] = 'custom_content_type_1';
        field_create_instance($instance);
    }

    //Gives user feedback
    drupal_set_message($t('Deposit UI installed'));



}

/**
 * Implements hook_uninstall().
 */
function flat_deposit_ui_uninstall(){
    $t = get_t();

    //Get all node IDs with flat_deposit_ui content type
    $sql_query = 'SELECT nid ';
    $sql_query .= 'FROM {node} ';
    $sql_query .= 'WHERE {node}.type = :type ';
    $result = db_query($sql_query,array(':type' => 'custom_content_type_1'));

    $nids = array();
    foreach ($result as $row) {
        $nids[] = $row->nid;
    }

    // Delete all flat_deposite_nodes
    node_delete_multiple($nids);
    drupal_set_message($t('Nodes containing Custom content types have been removed'));

    //Inform user about removal
    drupal_set_message($t('Deposit UI uninstalled'));

    //Remove all fields and field instances
    foreach (field_info_instance('node', 'custom_content_type_1') as $field_name => $instance) {
        field_delete_instance($instance);
    }

    //Inform about removal field and field instances
    drupal_set_message($t('Custom field and field instances have been removed'));

    // Delete custom content type
    node_type_delete('custom_content_type_1');
    drupal_set_message($t('Custom content type has been removed'));

    //Clean up deleted fields
    field_purge_batch(1000);
}

/**
 * Implements hook_schema().
 */
function flat_deposit_ui_schema() {

    $schema['flat_deposit_ui_files_info'] = array(
        'description' => 'Inventory of user files on the fedora backend.',
        'fields' => array(
            'pid'  => array(
                'type' => 'varchar',
                'length' => 255,
                'not null' => TRUE,
                'description' => 'File ID'
            ),
            'filename' => array(
                'type' => 'varchar',
                'length' => 255,
                'not null' => FALSE,
                'default' => '',
                'description' => 'File_name.'
            ),
            'name' => array(
                'type' => 'varchar',
                'length' => 255,
                'not null' => FALSE,
                'default' => '',
                'description' => 'Name of the file owner.'
            ),
            'dateIngested' => array(
                'type' => 'int',
                'length' => 12,
                'not null' => FALSE,
                'description' => 'Date when file is ingested.'
            ),
        ),
        'primary key' => array('pid'),

        'indexes' => array(
            'filename'    => array('filename'),
            'name' => array('name')
        ),
    );

    $schema['flat_deposit_ui_project_info'] = array(
        'description' => 'Inventory of user projects.',
        'fields' => array(
            'user_id'  => array(
                'type' => 'varchar',
                'length' => 255,
                'not null' => TRUE,
                'description' => 'User ID'
            ),
            'pname' => array(
                'type' => 'varchar',
                'length' => 255,
                'not null' => TRUE,
                'description' => 'Project name.'
            ),
            'is_frozen' => array(
                'type' => 'int',
                'pgsql_type' => 'boolean',
                'not null' => FALSE,
                'description' => 'Freezing status of the project'
            ),
            'freeze_date' => array(
                'type' => 'int',
                'length' => 10,
                'not null' => FALSE,
                'description' => 'Freeze date of the project'
            ),
            'is_ingested' => array(
                'type' => 'int',
                'pgsql_type' => 'boolean',
                'not null' => FALSE,
                'description' => 'Ingest status of the project'
            ),
            'ingest_date' => array(
                'type' => 'int',
                'length' => 10,
                'not null' => FALSE,
                'description' => 'Ingest date of the project'
            ),
            'field_str' => array(
                'type' => 'varchar',
                'length' => 255,
                'not null' => FALSE,
                'default' => '',
                'description' => 'Temp string field'
            ),
            'field_int' => array(
                'type' => 'int',
                'length' => 2,
                'not null' => FALSE,
                'description' => 'Temp int field'
            ),
        ),
    );

    return $schema;
}
