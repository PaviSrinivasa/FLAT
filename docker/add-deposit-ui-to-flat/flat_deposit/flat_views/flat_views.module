<?php
/**
 * @file
 * Primarily Drupal hooks and global API functions setup the example.
 *
 * This is the main module file for the view_actions example.
 * It implements :
 *  hook_views_api() : register this module with views api and set path
 *
 *
 */

/**
 * Implements hook_views_api().
 * register with views api
 * declare the path where to find the view include files
 *
 */

function flat_views_views_api() {

  $views_registration = array (
    'api' => '3.0',
    'path' => drupal_get_path('module', 'flat_views') . '/views',
  );


  return $views_registration;
}


/**
 * Implements hook_block_info_alter().
 */
function flat_views_block_info_alter(&$blocks, $theme, $code_blocks)
{

    foreach ($blocks['views'] as &$view_block){

        $block_description = $view_block['info'];
        switch ($block_description){
            case "Flat user notifications":
                $view_block['region'] = 'content';
                $view_block['visibility'] = BLOCK_VISIBILITY_LISTED;
                $view_block['pages'] = 'user/*/dashboard';
                $view_block['status'] = TRUE;
                break;

            case "FLAT my bundles":
                $view_block['region'] = 'content';
                $view_block['visibility'] = BLOCK_VISIBILITY_LISTED;
                $view_block['pages'] = 'user/*/dashboard/bundles';
                $view_block['status'] = TRUE;
                break;

            case "FLAT my collections":
                $view_block['region'] = 'content';
                $view_block['visibility'] = BLOCK_VISIBILITY_LISTED;
                $view_block['pages'] = 'user/*/dashboard/collections';
                $view_block['status'] = TRUE;
                break;
        }



        }







    #var_dump($blocks['views']);
}




function flat_views_pre_render(&$view) {
    #krumo ($view);

    if ($view->name == 'flat_my_collections') {

        foreach ($view->result as $key => $result) {

            $val = $result->field_data_flat_fid_flat_fid_value;
            $link = l('link to archive', 'islandora/object/' . rawurlencode($val));
            $result->field_flat_flat_fid[0]['rendered']['#markup'] = $link;
            #krumo ($result);
            #var_dump($result->field_data_flat_fid_flat_fid_value);
        }
    }
}

